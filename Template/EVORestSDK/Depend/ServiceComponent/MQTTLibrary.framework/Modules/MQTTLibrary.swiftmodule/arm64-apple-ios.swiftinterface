// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MQTTLibrary
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CocoaMQTT
import Foundation
@_exported import MQTTLibrary
import Swift
import _Concurrency
import _StringProcessing
@objc public protocol MQTTNewMsgNotifyProtocol : ObjectiveC.NSObjectProtocol {
  @objc func mqttNewMessageNotifyArrived(_ dicReceive: [Swift.String : Any], topic: Swift.String)
}
@_inheritsConvenienceInitializers @objc public class CocoaMQManager : ObjectiveC.NSObject {
  @objc public static let shareInstance: MQTTLibrary.CocoaMQManager
  @objc public func initMQServerWithAuthCer(strIP: Swift.String, serverPort: Swift.Int, userName: Swift.String, caCer: Swift.String, clientP12: Swift.String)
  @objc public func registerTopic(_ notifyModule: any MQTTLibrary.MQTTNewMsgNotifyProtocol, topic: Swift.String)
  @objc public func unRegisterTopic(_ notifyModule: any MQTTLibrary.MQTTNewMsgNotifyProtocol, topic: Swift.String)
  @objc public func uninitMQSever(_ unregist: Swift.Bool = true)
  @objc override dynamic public init()
  @objc deinit
}
